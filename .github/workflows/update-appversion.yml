name: Update Charts appVersion

on:
  workflow_dispatch:
    inputs:
      appVersion:
        description: "which appVersion to set in the charts?"
        type: string
        required: true
  repository_dispatch:
    types: [update-vault-raft-snapshot-agent-images]

env:
  CHARTS_DIR: ./charts

jobs:
  update-app-version:
    if: (inputs.appVersion || github.event.client_payload.appVersion) != ''
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout repository"
      uses: actions/checkout@v3
      with:
        ref: master

    - name: Download semver shell utility
      run: |
        wget -O /tmp/semver https://raw.githubusercontent.com/fsaintjacques/semver-tool/master/src/semver
        chmod +x /tmp/semver

        /tmp/semver --version

    - name: Update charts
      run: |
        APP_VERSION=${{ inputs.appVersion || github.event.client_payload.appVersion }}
        echo "New appVersion: $APP_VERSION"
        while IFS= read -r -d $'\0' chart; do
          CURRENT_APP_VERSION=$(sed -n 's/^appVersion:\s*\([^\n]*\)/\1/p' $chart)
          #if [ "$CURRENT_APP_VERSION" != "$APP_VERSION" ]; then
            echo "Updating $chart..."
            CURRENT_CHART_VERSION=$(sed -n 's/^version:\s*\([^\n]*\)/\1/p' $chart)
            echo " - current version: $CURRENT_CHART_VERSION"
            NEW_CHART_VERSION=$(/tmp/semver bump patch $CURRENT_CHART_VERSION)
            echo " - new version: $NEW_CHART_VERSION"
            sed -n 's/^\(appVersion:\s*\)[^\n]*/\1"${APP_VERSION}"/p' $chart
            sed -n 's/^\(version:\s*\)[^\n]*/\1"${NEW_CHART_VERSION}"/p' $chart
          #fi
        done < <(find "${{ env.CHARTS_DIR }}" -type f -name Chart.yaml -print0)
