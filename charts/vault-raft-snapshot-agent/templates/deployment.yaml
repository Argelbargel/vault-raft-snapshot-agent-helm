apiVersion: "apps/v1"
kind: Deployment
metadata:
  name: {{ template "vault-raft-snapshot-agent.fullname" . }}
  namespace: {{ template "vault-raft-snapshot-agent.namespace" . }}
  labels:
    helm.sh/chart: {{ template "vault-raft-snapshot-agent.chart" . }}
    app.kubernetes.io/name: {{ template "vault-raft-snapshot-agent.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    component: snapshot-agent
    {{- with .Values.deployment.extraLabels }}
    {{ toYaml . | indent 4 }}
    {{- end }}
  {{- with .Values.deployment.extraAnnotations }}
  annotations:
    {{ toYaml . | indent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "vault-raft-snapshot-agent.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      component: snapshot-agent
  replicas: 1
  strategy:
    type: {{ .Values.deployment.spec.strategy.type }}
  {{- with .Values.deployment.spec.revisionHistoryLimit }}
  revisionHistoryLimit: {{ .Values.deployment.spec.revisionHistoryLimit }}
  {{- end }}
  template:
    metadata:
      labels:
        helm.sh/chart: {{ template "vault-raft-snapshot-agent.chart" . }}
        app.kubernetes.io/name: {{ include "vault-raft-snapshot-agent.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        component: snapshot-agent
        {{- with .Values.deployment.spec.extraLabels }}
        {{ toYaml . | indent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print .Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.deployment.spec.extraAnnotations }}
        {{ toYaml . | indent 8 }}
        {{- end }}
    spec:
      restartPolicy: Always
      serviceAccountName: {{ include "helm.serviceAccountName" . }}
      containers:
        - name: {{ include "vault-raft-snapshot-agent.name" . }}
          {{- with .Values.deployment.spec.image }}
          image: {{ .repo }}:{{ .tag | default $.Chart.AppVersion }}
          imagePullPolicy: {{ .pullPolicy }}
          {{- end }}
          {{- if not (empty .Values.deployment.spec.extraEnv) }}
          env: {{ toYaml .Values.deployment.spec.extraEnv | nindent 12 }}
          {{- end }}
          {{- if not (empty .Values.deployment.spec.extraEnvFrom) }}
          envFrom: {{ toYaml .Values.deployment.spec.extraEnvFrom | nindent 12 }}
          {{- end }}
          {{- if not (and (empty .Values.deployment.spec.resources.limits) (empty .Values.deployment.spec.resources.requests)) }}
          resources:
            {{- with .Values.deployment.spec.resources.limits }}
            limits:
              {{- with .cpu }}
              cpu: {{ . }}
              {{- end }}
              {{- with .memory }}
              memory: {{ . }}
              {{- end }}
            {{- end }}
            {{- with .Values.deployment.spec.resources.requests }}
            requests:
              {{- with .cpu }}
              cpu: {{ . }}
              {{- end }}
              {{- with .memory }}
              memory: {{ . }}
              {{- end }}
            {{- end }}
          {{- end }}
          volumeMounts:
            - mountPath: /etc/vault.d/
              name: config
              readOnly: true
            {{- if .Values.config.snapshots.storages.local.enabled }}
            - mountPath: {{ .Values.config.snapshots.storages.local.path }}
              name: snapshots
            {{- end }}
            {{- range $volume := .Values.deployment.spec.extraVolumes }}
            - mountPath: {{ required "volume mountPath is required" $volume.mountPath }}
              name: {{ required "volume name is required" $volume.name }}
              {{- with $volume.readOnly }}
              readOnly: {{ $volume.readOnly }}
              {{- end }}
            {{- end }}
      {{ with .Values.deployment.spec.initContainer }}
      initContainers:
      - name: {{  .name | default "initialize-agent" }}
        image: {{ .image | default "alpine:3.19.1" }}
        {{- with .command }}
        command: {{ tpl (toYaml .) $ | nindent 8 }}
        {{- end }}
        {{- with .env }}
        env: {{ tpl (toYaml .) $ | nindent 8 }}
        {{- end }}
        {{- with $.Values.deployment.spec.extraVolumes }}
        volumeMounts:
          {{- range $volume := $.Values.deployment.spec.extraVolumes }}
          - mountPath: {{ required "volume mountPath is required" $volume.mountPath }}
            name: {{ required "volume name is required" $volume.name }}
            {{- with $volume.readOnly }}
            readOnly: {{ $volume.readOnly }}
            {{- end }}
          {{- end}}
        {{- end }}
      {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "vault-raft-snapshot-agent.fullname" . }}
        {{- if .Values.config.snapshots.storages.local.enabled }}
        - name: snapshots
          {{- with .Values.config.snapshots.storages.local.volume }}
          {{- if .persistentVolumeClaim }}
          persistentVolumeClaim:
            claimName: {{ include "vault-raft-snapshot-agent.fullname" $ }}
          {{- else }}
          {{- toYaml . | nindent 10 -}}
          {{- end }}
          {{- end }}
        {{- end }}
        {{- range $volume := .Values.deployment.spec.extraVolumes }}
        - name: {{ required "volume name is required" (get $volume "name") }}
          {{- toYaml (omit $volume "name" "mountPath" "readOnly") | nindent 10 }}
        {{- end }}
